<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <script>PLACEHOLDER_SCRIPT</script>
    <style>
        PLACEHOLDER_STYLESHEET
    </style>
    <style>
        :root {
            color-scheme: light dark !important;
        }

        html,
        body {
            overscroll-behavior: none !important;
            margin: 0 !important;
        }

        body::-webkit-scrollbar {
            display: none !important;
        }

        #markdown-rendered>*:first-child {
            margin-top: 0 !important;
        }

        #markdown-rendered>*:last-child {
            margin-bottom: 0 !important;
        }

        .code-block-wrapper {
            position: relative;
        }

        .copy-code-button {
            background-color: #f0f0f0;
            border: none;
            border-radius: 4px;
            font-size: 14px;
            cursor: pointer;
            opacity: 0;
            transition: opacity 0.2s ease-in-out;
        }

        .code-block-wrapper:hover .copy-code-button {
            opacity: 1;
        }

        .copy-code-button.copied {
            background-color: #4caf50;
            opacity: 0;
            transition: opacity 0.2s ease-in-out;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/katex.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/katex.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/markdown-it-texmath@1.0.0/texmath.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/markdown-it-texmath@1.0.0/css/texmath.min.css" rel="stylesheet">
</head>

<body>
    <div id="markdown-rendered"></div>
    <script>
        const markdownIt = window.markdownit({
            highlight: function (str, lang) {
                if (lang && hljs.getLanguage(lang)) {
                    try {
                        return hljs.highlight(str, {language: lang}).value;
                    } catch (__) { }
                } else {
                    try {
                        return hljs.highlightAuto(str).value;
                    } catch (__) { }
                }

                return ``;
            },
            linkify: true,
        })
            .use(window.markdownitMark)
            .use(window.markdownitTaskLists)
            .use(window.texmath, {
                engine: window.katex,
                delimiters: ['dollars', 'brackets', 'doxygen', 'gitlab', 'julia', 'kramdown', 'beg_end'],
                katexOptions: {
                    throwOnError: false,
                    errorColor: '#cc0000',
                },
            });

        const markdownRenderedElement = document.getElementById(`markdown-rendered`);

        window.updateWithMarkdownContentBase64Encoded = (markdownContentBase64Encoded) => {
            const markdownContent = decodeURIComponent(atob(markdownContentBase64Encoded).split(``).map(function (c) {return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);}).join(``));
            markdownRenderedElement.innerHTML = markdownIt.render(markdownContent);
            addCopyButtons()
            window.webkit.messageHandlers.renderedContentHandler.postMessage(markdownContentBase64Encoded);
        }

        function addCopyButtons() {
            const codeBlocks = document.querySelectorAll('pre');
            codeBlocks.forEach((codeBlock) => {
                const button = document.createElement('button');
                button.className = 'copy-code-button';
                button.innerHTML = '<i class="fa-regular fa-clone"></i>'; // Font Awesome copy icon
                button.addEventListener('click', async () => {
                    window.webkit.messageHandlers.copyToPasteboard.postMessage(codeBlock.innerText);
                    button.innerHTML = '<i class="fa-solid fa-check"></i>'; // Font Awesome check icon
                    button.classList.add('copied');
                    setTimeout(() => {
                        button.innerHTML = '<i class="fa-regular fa-clone"></i>';
                        button.classList.remove('copied');
                    }, 2000);
                    console.log(codeBlock.textContent);
                });
                const wrapper = document.createElement('div');
                wrapper.className = 'code-block-wrapper';
                codeBlock.parentNode.insertBefore(wrapper, codeBlock);
                wrapper.appendChild(codeBlock);
                wrapper.appendChild(button);
            });
        }


        const resizeObserver = new ResizeObserver((entries) => {window.webkit.messageHandlers.sizeChangeHandler.postMessage(entries[0].borderBoxSize[0].blockSize)});
        resizeObserver.observe(markdownRenderedElement);
    </script>
</body>

</html>
